{"ast":null,"code":"import { put, takeLatest, all } from \"redux-saga/effects\";\nlet countr = 'ua';\nconst url = \"https://newsapi.org/v2/top-headlines?country=\".concat(countr, \"&apiKey=55fe93ba7e4146ee983cb8c0c4535985\");\n\nfunction* fetchNews() {\n  const data = yield fetch(url).then(body => body.json());\n  yield put({\n    type: \"NEWS_RECEIVED\",\n    payload: data\n  });\n}\n\nfunction* fetchCountry({\n  country\n}) {\n  countr = country;\n  yield put('GET_NEWS', fetchNews);\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(\"GET_NEWS\", fetchNews);\n  yield takeLatest('COUNTRY_SET', fetchCountry);\n}\n\nexport default function* rootSaga(arg) {\n  yield all([actionWatcher()]);\n}","map":{"version":3,"sources":["/Users/serhiishovkovyi/Documents/js/saga-learn/news-site/src/sagas/index.js"],"names":["put","takeLatest","all","countr","url","fetchNews","data","fetch","then","body","json","type","payload","fetchCountry","country","actionWatcher","rootSaga","arg"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,IAAIC,MAAM,GAAG,IAAb;AACA,MAAMC,GAAG,0DAAmDD,MAAnD,6CAAT;;AACA,UAAUE,SAAV,GAAsB;AACpB,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAL,CAAWI,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAAxB,CAAnB;AACA,QAAMV,GAAG,CAAC;AAAEW,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEN;AAAlC,GAAD,CAAT;AACD;;AAED,UAAUO,YAAV,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAkC;AAChCX,EAAAA,MAAM,GAAGW,OAAT;AACA,QAAMd,GAAG,CAAC,UAAD,EAAaK,SAAb,CAAT;AACD;;AACD,UAAUU,aAAV,GAA0B;AAExB,QAAMd,UAAU,CAAC,UAAD,EAAaI,SAAb,CAAhB;AACA,QAAMJ,UAAU,CAAC,aAAD,EAAgBY,YAAhB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,CAAmBC,GAAnB,EAAwB;AAErC,QAAMf,GAAG,CAAC,CAACa,aAAa,EAAd,CAAD,CAAT;AACD","sourcesContent":["import { put, takeLatest, all } from \"redux-saga/effects\";\nlet countr = 'ua';\nconst url = `https://newsapi.org/v2/top-headlines?country=${countr}&apiKey=55fe93ba7e4146ee983cb8c0c4535985`\nfunction* fetchNews() {\n  const data = yield fetch(url).then(body => body.json());\n  yield put({ type: \"NEWS_RECEIVED\", payload: data });\n}\n\nfunction* fetchCountry({country}) {\n  countr = country;\n  yield put('GET_NEWS', fetchNews)\n}\nfunction* actionWatcher() {\n\n  yield takeLatest(\"GET_NEWS\", fetchNews);\n  yield takeLatest('COUNTRY_SET', fetchCountry)\n}\n\nexport default function* rootSaga(arg) {\n\n  yield all([actionWatcher()]);\n}\n"]},"metadata":{},"sourceType":"module"}